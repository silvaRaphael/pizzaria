{{#> wrapper}}
  <div class="col-lg-12">

    <div class="card">
      <div class="card-header d-flex justify-content-between">
        <h5 class="card-title">Clientes</h5>
        <a class="btn btn-primary h-min" onclick="modalAdd.show()">Novo Cliente</a>
      </div>
      <div class="card-body">
        <div class="py-3">
          <table id="client-table" class="table dt-responsive nowrap align-middle" style="width:100%">
            <thead>
              <tr>
                <th scope="col">#</th>
                <th scope="col">Cliente</th>
                <th scope="col">Celular</th>
                <th scope="col"><i class="bi bi-tools"></i></th>
              </tr>
            </thead>
            <tbody></tbody>
          </table>
        </div>
      </div>
    </div>

  </div>
{{/wrapper}}

{{#> simple-modal id="modalAdd" title="Novo Cliente" onConfirm="createClient(this)"}}
  <div class="col-7 form-group mb-2">
    <label>Nome</label>
    <input type="text" class="form-control" name="name" required>
  </div>
  <div class="col-5 form-group mb-2">
    <label>Celular</label>
    <input type="text" class="form-control" name="phone" required>
  </div>
  <div class="col-5 form-group mb-2">
    <label>CEP</label>
    <input type="text" class="form-control" name="zip_code" required>
  </div>
  <div class="col-7 form-group mb-2">
    <label>Endereço</label>
    <input type="text" class="form-control" name="street_address" required>
  </div>
  <div class="col-5 form-group mb-2">
    <label>Número</label>
    <input type="text" class="form-control" name="street_number" required>
  </div>
  <div class="col-7 form-group mb-2">
    <label>Complemento</label>
    <input type="text" class="form-control" name="reference">
  </div>
  <div class="col-5 form-group mb-2">
    <label>Estado</label>
    {{> state-select states=states required=true onChange="loadCities(this.value, '#modalAdd')"}}
  </div>
  <div class="col-7 form-group mb-2">
    <label>Cidade</label>
    <select class="form-select" name="city_id" required>
      <option value="">Selecione</option>
    </select>
  </div>
{{/simple-modal}}

{{#> simple-modal id="modalEdit" title="Editar Cliente" onConfirm="updateClient(this)"}}
    <div class="col-7 form-group mb-2">
    <label>Nome</label>
    <input type="text" class="form-control" name="name" required>
  </div>
  <div class="col-5 form-group mb-2">
    <label>Celular</label>
    <input type="text" class="form-control" name="phone" required>
  </div>
  <div class="col-5 form-group mb-2">
    <label>CEP</label>
    <input type="text" class="form-control" name="zip_code" required>
  </div>
  <div class="col-7 form-group mb-2">
    <label>Endereço</label>
    <input type="text" class="form-control" name="street_address" required>
  </div>
  <div class="col-5 form-group mb-2">
    <label>Número</label>
    <input type="text" class="form-control" name="street_number" required>
  </div>
  <div class="col-7 form-group mb-2">
    <label>Complemento</label>
    <input type="text" class="form-control" name="reference">
  </div>
  <div class="col-5 form-group mb-2">
    <label>Estado</label>
    {{> state-select states=states required=true onChange="loadCities(this.value, '#modalEdit')"}}
  </div>
  <div class="col-7 form-group mb-2">
    <label>Cidade</label>
    <select class="form-select" name="city_id" required>
      <option value="">Selecione</option>
    </select>
  </div>
{{/simple-modal}}

<script>
  const clientTable = new DataTable('#client-table', {
    paging: true,
    autoWidth: true,
    searching: true,
    pageLength: 25,
    language,
    columns: [
      { data: '#', width: '10%', className: 'text-center' },
      { data: 'name', width: '50%' },
      { data: 'phone', width: '30%' },
      { data: 'actions', width: '10%', orderable: false, className: 'text-center' },
    ],
    ajax: {
      url: '{{defaultPath}}/api/clients',
      dataSrc: '',
    },
  });

  PhoneMask('#modalAdd [name="phone"]');
  CEPMask('#modalAdd [name="zip_code"]');
  PhoneMask('#modalEdit [name="phone"]');
  CEPMask('#modalEdit [name="zip_code"]');

  const modalAdd = new bootstrap.Modal('#modalAdd');
  const modalEdit = new bootstrap.Modal('#modalEdit');

  function createClient(button) {

    const requestCreateClient = new ApiRequest('{{defaultPath}}/api/clients', 'POST', '#modalAdd');

    if(!requestCreateClient.validate()) return;

    requestCreateClient.setButton(button);

    requestCreateClient.setBody({
      name: requestCreateClient.getField('name').value,
      phone: requestCreateClient.getField('phone').value,
      zip_code: requestCreateClient.getField('zip_code').value,
      street_address: requestCreateClient.getField('street_address').value,
      street_number: requestCreateClient.getField('street_number').value,
      reference: requestCreateClient.getField('reference').value,
      state_id: requestCreateClient.getField('state_id').value,
      city_id: requestCreateClient.getField('city_id').value,
    });

    requestCreateClient.onSuccess((response) => {
      Notification('Cliente adicionado!');
      clientTable.ajax.reload();
      modalAdd.hide();
      requestCreateClient.clearFields();
    });

    requestCreateClient.onError((response) => {
      Notification(response.error, 'danger');
    });

    requestCreateClient.send();
  }

  const requestUpdateClient = new ApiRequest(null, 'PUT', '#modalEdit');

  function editClient(id) {

    const requestDataClient = new ApiRequest(`{{defaultPath}}/api/client/${id}`, 'GET', '#modalEdit');

    requestDataClient.onSuccess((response) => {

      requestDataClient.setFields({
        name: response.name,
        phone: response.phone,
        zip_code: response.zip_code,
        street_address: response.street_address,
        street_number: response.street_number,
        reference: response.reference,
        state_id: response.state_id,
        city_id: response.city_id,
      });

      loadCities(response.state_id, '#modalEdit', response.city_id);

      requestUpdateClient.setUrl(`{{defaultPath}}/api/client/${id}`);
      
      modalEdit.show();
    });

    requestDataClient.onError((response) => {
      Notification(response.error, 'danger');
    });

    requestDataClient.send();
  }

  function updateClient(button) {

    if(!requestUpdateClient.validate()) return;

    requestUpdateClient.setButton(button);

    requestUpdateClient.setBody({
      name: requestUpdateClient.getField('name').value,
      phone: requestUpdateClient.getField('phone').value,
      zip_code: requestUpdateClient.getField('zip_code').value,
      street_address: requestUpdateClient.getField('street_address').value,
      street_number: requestUpdateClient.getField('street_number').value,
      reference: requestUpdateClient.getField('reference').value,
      state_id: requestUpdateClient.getField('state_id').value,
      city_id: requestUpdateClient.getField('city_id').value,
    });

    requestUpdateClient.onSuccess((response) => {
      Notification('Cliente alterado!');
      clientTable.ajax.reload();
      modalEdit.hide();
    });

    requestUpdateClient.onError((response) => {
      Notification(response.error);
    });

    requestUpdateClient.send();
  }

  function deleteClient(id) {
    CustomAlert(() => {
      const requestDeleteClient = new ApiRequest(`{{defaultPath}}/api/client/${id}`, 'DELETE');

      requestDeleteClient.onSuccess((response) => {
        clientTable.ajax.reload();
      });

      requestDeleteClient.onError((response) => {
        Notification(response.error, 'danger');
      });

      requestDeleteClient.send();
    });
  }

</script>